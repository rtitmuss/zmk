/*
 * Copyright (c) 2021 Richard Titmuss
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
	model = "tornblue";
	compatible = "tornblue";

	chosen {
		zephyr,code-partition = &code_partition;
        zephyr,console = &cdc_acm_uart;
		zephyr,flash = &flash0;
		zephyr,sram = &sram0;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
		zmk,underglow = &led_strip;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows = <4>;
// | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW23 | SW24 | SW25 | SW26 | SW27 | SW28 |
// | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW29 | SW30 | SW31 | SW32 | SW33 | SW34 |
// | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW35 | SW36 | SW37 | SW38 | SW39 | SW40 |
//               | SW19 | SW20 | SW21 | SW22 |   | SW41 | SW42 | SW43 | SW44 |
// Yes, this map is correct. The switches are out of order to produce cleaner traces on the PCB
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(3,5)  RC(3,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(3,3) RC(3,4) RC(0,5)  RC(0,6) RC(3,7) RC(3,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(3,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(3,9) RC(2,10) RC(2,11)
                RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9)
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";

		diode-direction = "col2row";
	};

	vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
		io-channels = <&adc 1>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 806000)>;
	};

    left_encoder: encoder_left {
            compatible = "alps,ec11";
            label = "LEFT_ENCODER";
            a-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            resolution = <4>;
    };

    right_encoder: encoder_right {
            compatible = "alps,ec11";
            label = "RIGHT_ENCODER";
            a-gpios = <&gpio0 02 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            b-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            resolution = <4>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };

    aliases {
            led1 = &led1;
            led2 = &led2;
            led3 = &led3;
    };
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&usbd {
  status = "okay";
  cdc_acm_uart: cdc_acm_uart {
    compatible = "zephyr,cdc-acm-uart";
    label = "CDC_ACM_0";
  };
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};
